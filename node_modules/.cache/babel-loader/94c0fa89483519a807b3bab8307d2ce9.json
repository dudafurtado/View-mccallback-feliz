{"ast":null,"code":"const BASE_URL = \"https://mc-callback.herokuapp.com\"; // const BASE_URL = \"http://localhost:8000\";\n\nasync function createDebtService(data, token) {\n  const response = await fetch(BASE_URL + '/debts/create', {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function editDebtService(resource, data, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"PATCH\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function listDebtsService(token, search) {\n  if (search) {\n    const response = await fetch(BASE_URL + `/debts?search=${search}`, {\n      method: \"GET\",\n      headers: {\n        'token': token\n      }\n    });\n    const responseData = await response.json();\n    return {\n      data: responseData,\n      ok: response.ok\n    };\n  }\n\n  const response = await fetch(BASE_URL + '/debts', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function listDebtsClientService(id, token) {\n  const response = await fetch(BASE_URL + `/debts/clients/${id}`, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function DebtDataService(id, token) {\n  const response = await fetch(BASE_URL + `/debts/${id}`, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n_c = DebtDataService;\n;\n\nasync function sumDebts(token) {\n  const response = await fetch(BASE_URL + '/sum/debts', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function countDebts(token) {\n  const response = await fetch(BASE_URL + '/count/debts', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listPaidDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/paid', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listExpiredDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/expired', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listPendingDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/pending', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nexport { createDebtService, editDebtService, listDebtsService, listDebtsClientService, sumDebts, countDebts, listPaidDebts, listExpiredDebts, listPendingDebts, DebtDataService };\n\nvar _c;\n\n$RefreshReg$(_c, \"DebtDataService\");","map":{"version":3,"names":["BASE_URL","createDebtService","data","token","response","fetch","method","body","JSON","stringify","headers","responseData","json","ok","editDebtService","resource","listDebtsService","search","listDebtsClientService","id","DebtDataService","sumDebts","countDebts","listPaidDebts","listExpiredDebts","listPendingDebts"],"sources":["/media/dudapantera/OS/DUDA/Programação/Cubos Academy Desenvolvimento FullStack/FRONT-END/Desafio 4 - FRONTEND/front-integral-m05-desafio-t05/src/services/debtService.js"],"sourcesContent":["const BASE_URL = \"https://mc-callback.herokuapp.com\";\n// const BASE_URL = \"http://localhost:8000\";\n\nasync function createDebtService(data, token) {\n    const response = await fetch(BASE_URL + '/debts/create', {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function editDebtService(resource, data, token) {\n    const response = await fetch(BASE_URL + resource, {\n        method: \"PATCH\",\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function listDebtsService(token, search) {\n    if (search) {\n        const response = await fetch(BASE_URL +\n            `/debts?search=${search}`, {\n            method: \"GET\",\n            headers: {\n                'token': token\n            }\n        });\n\n        const responseData = await response.json();\n\n        return { data: responseData, ok: response.ok };\n    }\n\n    const response = await fetch(BASE_URL + '/debts', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function listDebtsClientService(id, token) {\n    const response = await fetch(BASE_URL + `/debts/clients/${id}`, {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function DebtDataService(id, token) {\n    const response = await fetch(BASE_URL + `/debts/${id}`, {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function sumDebts (token) {\n    const response = await fetch(BASE_URL + '/sum/debts', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function countDebts (token) {\n    const response = await fetch(BASE_URL + '/count/debts', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listPaidDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/paid', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listExpiredDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/expired', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listPendingDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/pending', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nexport {\n    createDebtService,\n    editDebtService,\n    listDebtsService,\n    listDebtsClientService,\n    sumDebts,\n    countDebts,\n    listPaidDebts,\n    listExpiredDebts,\n    listPendingDebts,\n    DebtDataService\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}