{"ast":null,"code":"const BASE_URL = \"https://mc-callback.herokuapp.com\";\n\nasync function emailExistsForUser(_ref) {\n  let {\n    email\n  } = _ref;\n  const response = await fetch(BASE_URL + `/verify/email/${email}`, {\n    method: \"GET\"\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function signUpService(name, email, password) {\n  const response = await fetch(BASE_URL + \"/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(name, email, password),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function keepNameOfUser(_ref2) {\n  let {\n    email\n  } = _ref2;\n  const response = await fetch(BASE_URL + `/user/name/${email}`, {\n    method: \"GET\"\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function loginService(email, password) {\n  const response = await fetch(BASE_URL + \"/login\", {\n    method: \"POST\",\n    body: JSON.stringify(email, password),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function userDataService(resource, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function editUserService(resource, data, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"PATCH\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\nexport { emailExistsForUser, signUpService, keepNameOfUser, loginService, userDataService, editUserService };","map":{"version":3,"names":["BASE_URL","emailExistsForUser","email","response","fetch","method","responseData","json","data","ok","signUpService","name","password","body","JSON","stringify","headers","keepNameOfUser","loginService","userDataService","resource","token","editUserService"],"sources":["/media/dudapantera/OS/DUDA/Programação/Cubos Academy Desenvolvimento FullStack/FRONT-END/Desafio 4 - FRONTEND/front-integral-m05-desafio-t05/src/services/userService.js"],"sourcesContent":["const BASE_URL = \"https://mc-callback.herokuapp.com\";\n\nasync function emailExistsForUser({ email }) {\n  const response = await fetch(BASE_URL + `/verify/email/${email}`, {\n    method: \"GET\"\n  });\n\n  const responseData = await response.json();\n\n  return { data: responseData, ok: response.ok };\n};\n\nasync function signUpService(name, email, password) {\n  const response = await fetch(BASE_URL + \"/signup\", {\n    method: \"POST\",\n    body: JSON.stringify(name, email, password),\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  });\n\n  const responseData = await response.json();\n\n  return { data: responseData, ok: response.ok };\n}\n\nasync function keepNameOfUser({ email }) {\n  const response = await fetch(BASE_URL + `/user/name/${email}`, {\n    method: \"GET\"\n  });\n\n  const responseData = await response.json();\n\n  return { data: responseData, ok: response.ok };\n};\n\nasync function loginService(email, password) {\n  const response = await fetch(BASE_URL + \"/login\", {\n    method: \"POST\",\n    body: JSON.stringify(email, password),\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  });\n\n  const responseData = await response.json();\n\n  return { data: responseData, ok: response.ok };\n}\n\nasync function userDataService(resource, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n\n  const responseData = await response.json();\n\n  return { data: responseData, ok: response.ok };\n};\n\nasync function editUserService(resource, data, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"PATCH\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n\n  const responseData = await response.json();\n\n  return { data: responseData, ok: response.ok };\n};\n\nexport {\n  emailExistsForUser,\n  signUpService,\n  keepNameOfUser,\n  loginService,\n  userDataService,\n  editUserService\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}