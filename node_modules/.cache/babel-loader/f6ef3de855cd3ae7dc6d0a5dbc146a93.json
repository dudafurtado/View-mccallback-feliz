{"ast":null,"code":"const BASE_URL = \"https://mc-callback.herokuapp.com\"; // const BASE_URL = \"http://localhost:8000\";\n\nasync function createDebtService(data, token) {\n  const response = await fetch(BASE_URL + '/debts/create', {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function editDebtService(data, token) {\n  const response = await fetch(BASE_URL + '/debt/edit', {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function listDebtsService(token) {\n  const response = await fetch(BASE_URL + '/debts', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function listDebtsClientService(resource, token) {\n  const response = await fetch(BASE_URL + `/debts/clients/${resource}`, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function sumDebtsByStatus(status, token) {\n  const response = await fetch(BASE_URL + `/sum/debts/${status}`, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function countDebtsByStatus(status, token) {\n  const response = await fetch(BASE_URL + `/count/debts/${status}`, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listPaidDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/paid', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listExpiredDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/expired', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listPendingDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/pending', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nexport { createDebtService, editDebtService, listDebtsService, listDebtsClientService, sumDebtsByStatus, countDebtsByStatus, listPaidDebts, listExpiredDebts, listPendingDebts };","map":{"version":3,"names":["BASE_URL","createDebtService","data","token","response","fetch","method","body","JSON","stringify","headers","responseData","json","ok","editDebtService","listDebtsService","listDebtsClientService","resource","sumDebtsByStatus","status","countDebtsByStatus","listPaidDebts","listExpiredDebts","listPendingDebts"],"sources":["/media/dudapantera/OS/DUDA/Programação/Cubos Academy Desenvolvimento FullStack/FRONT-END/Desafio 4 - FRONTEND/front-integral-m05-desafio-t05/src/services/debtService.js"],"sourcesContent":["const BASE_URL = \"https://mc-callback.herokuapp.com\";\n// const BASE_URL = \"http://localhost:8000\";\n\nasync function createDebtService(data, token) {\n    const response = await fetch(BASE_URL + '/debts/create', {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function editDebtService(data, token) {\n    const response = await fetch(BASE_URL + '/debt/edit', {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function listDebtsService(token) {\n    const response = await fetch(BASE_URL + '/debts', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function listDebtsClientService(resource, token) {\n    const response = await fetch(BASE_URL + `/debts/clients/${resource}`, {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function sumDebtsByStatus (status, token) {\n    const response = await fetch(BASE_URL + `/sum/debts/${status}`, {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function countDebtsByStatus (status, token) {\n    const response = await fetch(BASE_URL + `/count/debts/${status}`, {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listPaidDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/paid', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listExpiredDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/expired', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listPendingDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/pending', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nexport {\n    createDebtService,\n    editDebtService,\n    listDebtsService,\n    listDebtsClientService,\n    sumDebtsByStatus,\n    countDebtsByStatus,\n    listPaidDebts,\n    listExpiredDebts,\n    listPendingDebts\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}