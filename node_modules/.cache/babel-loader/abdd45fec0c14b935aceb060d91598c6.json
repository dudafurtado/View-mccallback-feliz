{"ast":null,"code":"const BASE_URL = \"https://mc-callback.herokuapp.com\"; // const BASE_URL = \"http://localhost:8000\";\n\nasync function createClientService(resource, data, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function editClientService(resource, data, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"PATCH\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function listClientsService(token) {\n  const response = await fetch(BASE_URL + \"/client/list\", {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function clientDataService(id, token) {\n  const response = await fetch(BASE_URL + `/client/${id}`, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function countClientsByStatus(status, token) {\n  const response = await fetch(BASE_URL + `/count/client/${status}`, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listPaidDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/paid', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listExpiredDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/expired', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nasync function listPendingDebts(token) {\n  const response = await fetch(BASE_URL + '/list/debts/pending', {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\nexport { createClientService, editClientService, listClientsService, clientDataService };","map":{"version":3,"names":["BASE_URL","createClientService","resource","data","token","response","fetch","method","body","JSON","stringify","headers","responseData","json","ok","editClientService","listClientsService","clientDataService","id","countClientsByStatus","status","listPaidDebts","listExpiredDebts","listPendingDebts"],"sources":["/media/dudapantera/OS/DUDA/Programação/Cubos Academy Desenvolvimento FullStack/FRONT-END/Desafio 4 - FRONTEND/front-integral-m05-desafio-t05/src/services/clientService.js"],"sourcesContent":["const BASE_URL = \"https://mc-callback.herokuapp.com\";\n// const BASE_URL = \"http://localhost:8000\";\n\nasync function createClientService(resource, data, token) {\n    const response = await fetch(BASE_URL + resource, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function editClientService(resource, data, token) {\n    const response = await fetch(BASE_URL + resource, {\n        method: \"PATCH\",\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function listClientsService(token) {\n    const response = await fetch(BASE_URL + \"/client/list\", {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function clientDataService(id, token) {\n    const response = await fetch(BASE_URL + `/client/${id}`, {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function countClientsByStatus (status, token) {\n    const response = await fetch(BASE_URL + `/count/client/${status}`, {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listPaidDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/paid', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listExpiredDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/expired', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nasync function listPendingDebts (token) {\n    const response = await fetch(BASE_URL + '/list/debts/pending', {\n        method: \"GET\",\n        headers: {\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n}\n\nexport {\n    createClientService,\n    editClientService,\n    listClientsService,\n    clientDataService\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}