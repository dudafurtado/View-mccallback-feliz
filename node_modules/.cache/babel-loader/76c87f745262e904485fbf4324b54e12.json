{"ast":null,"code":"// const BASE_URL = \"https://mc-callback.herokuapp.com\";\nconst BASE_URL = \"http://localhost:8000\";\n\nasync function createClientService(resource, data, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function editClientService(resource, data, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"PATCH\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\n\nasync function listClientsService(resource, token) {\n  const response = await fetch(BASE_URL + resource, {\n    method: \"GET\",\n    headers: {\n      'token': token\n    }\n  });\n  const responseData = await response.json();\n  return {\n    data: responseData,\n    ok: response.ok\n  };\n}\n\n;\nexport { createClientService, editClientService, listClientsService };","map":{"version":3,"names":["BASE_URL","createClientService","resource","data","token","response","fetch","method","body","JSON","stringify","headers","responseData","json","ok","editClientService","listClientsService"],"sources":["/media/dudapantera/OS/DUDA/Programação/Cubos Academy Desenvolvimento FullStack/FRONT-END/Desafio 4 - FRONTEND/front-integral-m05-desafio-t05/src/services/clientService.js"],"sourcesContent":["// const BASE_URL = \"https://mc-callback.herokuapp.com\";\nconst BASE_URL = \"http://localhost:8000\";\n\nasync function createClientService(resource, data, token) {\n    const response = await fetch(BASE_URL + resource, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n        'Content-Type': 'application/json',\n        'token': token\n      }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function editClientService(resource, data, token) {\n    const response = await fetch(BASE_URL + resource, {\n        method: \"PATCH\",\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nasync function listClientsService(resource, token) {\n    const response = await fetch(BASE_URL + resource, {\n        method: \"GET\",\n        headers: {\n           'token': token \n        }\n    });\n\n    const responseData = await response.json();\n\n    return { data: responseData, ok: response.ok };\n};\n\nexport { \n    createClientService,\n    editClientService,\n    listClientsService    \n};"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,uBAAjB;;AAEA,eAAeC,mBAAf,CAAmCC,QAAnC,EAA6CC,IAA7C,EAAmDC,KAAnD,EAA0D;EACtD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAGE,QAAZ,EAAsB;IAC9CK,MAAM,EAAE,MADsC;IAE9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAFwC;IAG9CQ,OAAO,EAAE;MACT,gBAAgB,kBADP;MAET,SAASP;IAFA;EAHqC,CAAtB,CAA5B;EASA,MAAMQ,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;EAEA,OAAO;IAAEV,IAAI,EAAES,YAAR;IAAsBE,EAAE,EAAET,QAAQ,CAACS;EAAnC,CAAP;AACH;;AAAA;;AAED,eAAeC,iBAAf,CAAiCb,QAAjC,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwD;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAGE,QAAZ,EAAsB;IAC9CK,MAAM,EAAE,OADsC;IAE9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAFwC;IAG9CQ,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,SAASP;IAFJ;EAHqC,CAAtB,CAA5B;EASA,MAAMQ,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;EAEA,OAAO;IAAEV,IAAI,EAAES,YAAR;IAAsBE,EAAE,EAAET,QAAQ,CAACS;EAAnC,CAAP;AACH;;AAAA;;AAED,eAAeE,kBAAf,CAAkCd,QAAlC,EAA4CE,KAA5C,EAAmD;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAGE,QAAZ,EAAsB;IAC9CK,MAAM,EAAE,KADsC;IAE9CI,OAAO,EAAE;MACN,SAASP;IADH;EAFqC,CAAtB,CAA5B;EAOA,MAAMQ,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;EAEA,OAAO;IAAEV,IAAI,EAAES,YAAR;IAAsBE,EAAE,EAAET,QAAQ,CAACS;EAAnC,CAAP;AACH;;AAAA;AAED,SACIb,mBADJ,EAEIc,iBAFJ,EAGIC,kBAHJ"},"metadata":{},"sourceType":"module"}